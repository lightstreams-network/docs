#!/usr/bin/env bash

set -e
set -u
set -o pipefail

argv0=$(echo "$0" | sed -e 's,\\,/,g')

case "$(uname -s)" in
  Darwin) BASEDIR="$( cd "$( dirname "$argv0" )" && pwd )";;
  Linux) BASEDIR=$(dirname "$(readlink -f "$0" || echo "$argv0")");;
  *CYGWIN*) BASEDIR=`cygpath -w "$BASEDIR"`;;
  *MSYS*) BASEDIR=`cygpath -w "$BASEDIR"`;;
esac

readonly SCRIPTNAME=$(basename $0)
readonly SCRIPTDIR="$BASEDIR"
readonly PROJECTDIR="$SCRIPTDIR/.."
readonly ARGS="$@"
readonly CMD="generate-dir-tree"
readonly GO_LIGHSTREAMS_REPO="git@github.com:lightstreams-network/go-lightstreams.git"
readonly LIGHTCHAIN_REPO="git@github.com:lightstreams-network/lightchain.git"
readonly GO_LIGHSTREAMS_TMP="$(dirname $(mktemp -u))/go-lightstreams"
readonly LIGHTCHAIN_TMP="$(dirname $(mktemp -u))/lightchain"
readonly CLI_DOCS_DIR="cli-docs"

cmdline() {
    create_docs_leth
    create_docs_lightchain
}

create_docs_leth() {
    create_docs "$GO_LIGHSTREAMS_REPO" "$GO_LIGHSTREAMS_TMP" "leth"
}

create_docs_lightchain() {
    create_docs "$LIGHTCHAIN_REPO" "$LIGHTCHAIN_TMP" "lightchain"
}

create_docs() {
    local repo="$1"
    local tmp_repo_path="$2"
    local subdir="$3"

    pushd "/tmp"
        clone_repo $repo $tmp_repo_path
    popd

    pushd $PROJECTDIR
        if is_dir "auto_generated"; then
            rm -rf "auto_generated"
        fi
        rsync -arvpzH  "$tmp_repo_path/docs/cmd/auto_generated/" "auto_generated/"

        pushd "content"
            convert_docs "../auto_generated" "$CLI_DOCS_DIR" "$subdir"
        popd
    popd
}


clone_repo() {
    local repo="$1"
    local tmp_repo_path="$2"

    if is_dir $tmp_repo_path; then
        rm -rf $tmp_repo_path
    fi
    git clone "$repo" $tmp_repo_path
}

convert_docs() {
    local input_dir=$1
    local output_dir=$2
    local clean_dir=$3

    pushd "$output_dir"
    if is_dir "$clean_dir"; then
        rm -rf "$clean_dir"
    fi
    popd

    $SCRIPTDIR/$CMD "$input_dir" "$output_dir"
}

is_dir() {
    local dir="$1"

    [[ -d $dir ]]
}

main() {
    cmdline
}

main
